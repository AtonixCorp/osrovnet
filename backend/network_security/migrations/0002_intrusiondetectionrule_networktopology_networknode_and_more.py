# Generated by Django 5.2.6 on 2025-09-19 07:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('network_security', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='IntrusionDetectionRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('rule_type', models.CharField(choices=[('signature', 'Signature-based'), ('anomaly', 'Anomaly-based'), ('heuristic', 'Heuristic-based'), ('behavioral', 'Behavioral Analysis')], max_length=20)),
                ('severity', models.CharField(choices=[('critical', 'Critical'), ('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('info', 'Informational')], max_length=10)),
                ('pattern', models.TextField()),
                ('action', models.CharField(default='alert', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'intrusion_detection_rules',
            },
        ),
        migrations.CreateModel(
            name='NetworkTopology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('network_range', models.CharField(max_length=255)),
                ('discovered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topology_data', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Network Topologies',
                'db_table': 'network_topologies',
            },
        ),
        migrations.CreateModel(
            name='NetworkNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('hostname', models.CharField(blank=True, max_length=255)),
                ('mac_address', models.CharField(blank=True, max_length=17)),
                ('node_type', models.CharField(choices=[('host', 'Host'), ('router', 'Router'), ('switch', 'Switch'), ('firewall', 'Firewall'), ('server', 'Server'), ('workstation', 'Workstation'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('os_fingerprint', models.CharField(blank=True, max_length=255)),
                ('position_x', models.FloatField(default=0.0)),
                ('position_y', models.FloatField(default=0.0)),
                ('is_gateway', models.BooleanField(default=False)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(default=dict)),
                ('topology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='network_security.networktopology')),
            ],
            options={
                'db_table': 'network_nodes',
                'unique_together': {('topology', 'ip_address')},
            },
        ),
        migrations.CreateModel(
            name='TrafficPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pattern_type', models.CharField(choices=[('normal', 'Normal Traffic'), ('suspicious', 'Suspicious Activity'), ('malicious', 'Malicious Traffic'), ('ddos', 'DDoS Attack'), ('port_scan', 'Port Scanning'), ('brute_force', 'Brute Force Attack'), ('data_exfiltration', 'Data Exfiltration')], max_length=20)),
                ('source_ip', models.GenericIPAddressField()),
                ('destination_ip', models.GenericIPAddressField()),
                ('source_port', models.IntegerField()),
                ('destination_port', models.IntegerField()),
                ('protocol', models.CharField(max_length=10)),
                ('packet_count', models.IntegerField(default=1)),
                ('byte_count', models.BigIntegerField(default=0)),
                ('duration', models.DurationField()),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('metadata', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'traffic_patterns',
                'indexes': [models.Index(fields=['source_ip', 'detected_at'], name='traffic_pat_source__717339_idx'), models.Index(fields=['destination_ip', 'detected_at'], name='traffic_pat_destina_b2e82a_idx'), models.Index(fields=['pattern_type', 'detected_at'], name='traffic_pat_pattern_57ca4d_idx')],
            },
        ),
        migrations.CreateModel(
            name='NetworkConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connection_type', models.CharField(choices=[('direct', 'Direct Connection'), ('routed', 'Routed Connection'), ('vpn', 'VPN Connection'), ('wireless', 'Wireless Connection')], default='direct', max_length=20)),
                ('latency', models.FloatField(blank=True, null=True)),
                ('bandwidth', models.IntegerField(blank=True, null=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(default=dict)),
                ('destination_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incoming_connections', to='network_security.networknode')),
                ('source_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_connections', to='network_security.networknode')),
                ('topology', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='connections', to='network_security.networktopology')),
            ],
            options={
                'db_table': 'network_connections',
                'unique_together': {('topology', 'source_node', 'destination_node')},
            },
        ),
    ]
