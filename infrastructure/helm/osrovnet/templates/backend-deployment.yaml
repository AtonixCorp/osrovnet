apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "osrovnet.fullname" . }}-backend
  labels:
    {{- include "osrovnet.backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "osrovnet.backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
      labels:
        {{- include "osrovnet.backend.selectorLabels" . | nindent 8 }}
    spec:
      {{- include "osrovnet.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "osrovnet.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      initContainers:
        - name: migrate
          image: {{ include "osrovnet.backend.image" . }}
          imagePullPolicy: {{ .Values.image.backend.pullPolicy }}
          command: ['python', 'manage.py', 'migrate']
          envFrom:
            - configMapRef:
                name: {{ include "osrovnet.fullname" . }}-config
            - secretRef:
                name: {{ include "osrovnet.fullname" . }}-secret
          securityContext:
            {{- toYaml .Values.security.securityContext | nindent 12 }}
      containers:
        - name: backend
          image: {{ include "osrovnet.backend.image" . }}
          imagePullPolicy: {{ .Values.image.backend.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "osrovnet.fullname" . }}-config
            - secretRef:
                name: {{ include "osrovnet.fullname" . }}-secret
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            - name: data
              mountPath: /app/data
          livenessProbe:
            httpGet:
              path: /health/
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /health/
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 12
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.security.securityContext | nindent 12 }}
      volumes:
        - name: logs
          {{- if .Values.persistence.logs.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "osrovnet.fullname" . }}-logs-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: data
          {{- if .Values.persistence.data.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "osrovnet.fullname" . }}-data-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}